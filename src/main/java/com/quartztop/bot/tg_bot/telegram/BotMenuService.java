package com.quartztop.bot.tg_bot.telegram;

import com.quartztop.bot.tg_bot.dto.ButtonDto;
import com.quartztop.bot.tg_bot.entity.botUsers.BotUser;
import com.quartztop.bot.tg_bot.entity.botUsers.BotUserRole;
import com.quartztop.bot.tg_bot.entity.botUsers.Roles;
import com.quartztop.bot.tg_bot.entity.buttons.Button;
import com.quartztop.bot.tg_bot.services.crud.ButtonsService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardRow;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardButton;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardRow;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

@Component
@RequiredArgsConstructor
@Slf4j
public class BotMenuService {

    private final ButtonsService buttonsService;

    public SendMessage linkImageMenu(long chatId) {
        List<ButtonDto> list = buttonsService.getAll();
        List<InlineKeyboardRow> listRows = new ArrayList<>();
        for(ButtonDto buttonDto : list) {
            InlineKeyboardButton inlineKeyboardButton = new InlineKeyboardButton(buttonDto.getTextButton());
            inlineKeyboardButton.setUrl(buttonDto.getButtonValue());
            InlineKeyboardRow inlineKeyboardButtons = new InlineKeyboardRow();
            inlineKeyboardButtons.add(inlineKeyboardButton);
            listRows.add(inlineKeyboardButtons);
        }
        InlineKeyboardMarkup inlineKeyboardMarkup = new InlineKeyboardMarkup(listRows);

        return SendMessage.builder()
                .chatId(chatId)
                .text("–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–∞–º –Ω–∏–∂–µ \uD83D\uDC47")
                .replyMarkup(inlineKeyboardMarkup)
                .build();
    }

    public static SendMessage mainMenu(long chatId, BotUser user) {
        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("üì¶ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ"));
        row1.add(new KeyboardButton("üì∑ –§–æ—Ç–æ –∏–∑–¥–µ–ª–∏–π"));

        KeyboardRow row2 = new KeyboardRow();
        if(user.getBotUserRole().getRole() == Roles.ANALYST) {
            row2.add(new KeyboardButton("\uD83D\uDCCA –û—Ç—á–µ—Ç—ã"));
        } else {
            row2.add(new KeyboardButton("üéÅ –ê–∫—Ü–∏–∏"));
            row2.add(new KeyboardButton("‚ùì–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"));
        }

        List<KeyboardRow> keyboard = new ArrayList<>();
        keyboard.add(row1);
        keyboard.add(row2);

        ReplyKeyboardMarkup markup = ReplyKeyboardMarkup.builder()
                .keyboard(keyboard)
                .resizeKeyboard(true)
                .oneTimeKeyboard(false)
                .build();
        return SendMessage.builder()
                .chatId(chatId)
                .text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤ —Å–∞–º–æ–º –Ω–∏–∑—É \uD83D\uDC47")
                .replyMarkup(markup)
                .build();
    }

    public static SendMessage reportMenu(long chatId, BotUser user) {

        KeyboardRow row1 = new KeyboardRow();
        KeyboardRow row2 = new KeyboardRow();
        KeyboardRow row3 = new KeyboardRow();

        if(user.getBotUserRole().getRole() == Roles.ANALYST) {
            log.info("–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Æ " + user.getFirstName() + " " + user.getLastName() + " —Å –ø—Ä–∞–≤–∞–º–∏ " + user.getBotUserRole().getRole() +
                    " –û–¢–ü–†–ê–í–õ–ï–ù–û –ú–ï–ù–Æ –í–´–ë–û–†–ê –û–¢–ß–ï–¢–û–í ");
            row1.add(new KeyboardButton("\uD83D\uDCCA –û—Å–Ω–æ–≤–Ω–æ–π –û—Ç—á–µ—Ç"));
            row1.add(new KeyboardButton("\uD83D\uDCCA –†–µ–π—Ç–∏–Ω–≥–∏ —Ç–æ–≤–∞—Ä–æ–≤"));
            row2.add(new KeyboardButton("\uD83D\uDCCA –û—Å–Ω–æ–≤–Ω–æ–π –û—Ç—á–µ—Ç –ò–Ω—Ç–µ—Ä–°—Ç–æ—É–Ω"));
            row2.add(new KeyboardButton("\uD83D\uDCCA –†–µ–π—Ç–∏–Ω–≥–∏ —Ç–æ–≤–∞—Ä–æ–≤ –ò–Ω—Ç–µ—Ä–°—Ç–æ—É–Ω"));
            row3.add(new KeyboardButton("\uD83D\uDCCA –û—Å—Ç–∞—Ç–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤"));
        } else {
            row1.add(new KeyboardButton("üéÅ –ê–∫—Ü–∏–∏"));
            row1.add(new KeyboardButton("‚ùì–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"));
        }

        List<KeyboardRow> keyboard = new ArrayList<>();
        keyboard.add(row1);
        keyboard.add(row2);
        keyboard.add(row3);

        ReplyKeyboardMarkup markup = ReplyKeyboardMarkup.builder()
                .keyboard(keyboard)
                .resizeKeyboard(true)
                .oneTimeKeyboard(false)
                .build();
        return SendMessage.builder()
                .chatId(chatId)
                .text("–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç—á–µ—Ç \uD83D\uDC47")
                .replyMarkup(markup)
                .build();
    }

    public static SendMessage linkStockReportMenu(long chatId, BotUser user) {
        if (user.getBotUserRole().getRole() != Roles.ANALYST) return null;
        List<InlineKeyboardRow> listRows = new ArrayList<>();
        InlineKeyboardButton inlineKeyboardButton = new InlineKeyboardButton("–û—Å—Ç–∞—Ç–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ —Å–∫–ª–∞–¥–∞–º –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º");
        inlineKeyboardButton.setCallbackData("STOCK_REPORT");
        InlineKeyboardRow inlineKeyboardButtons = new InlineKeyboardRow();
        inlineKeyboardButtons.add(inlineKeyboardButton);
        listRows.add(inlineKeyboardButtons);

        InlineKeyboardMarkup inlineKeyboardMarkup = new InlineKeyboardMarkup(listRows);

        return SendMessage.builder()
                .chatId(chatId)
                .text("–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç—á–µ—Ç \uD83D\uDC47")
                .replyMarkup(inlineKeyboardMarkup)
                .build();

    }


    public static SendMessage linkGeneralReportMenu(long chatId, BotUser user, String typeReport) {
        if (user.getBotUserRole().getRole() != Roles.ANALYST) return null;

        int startYear = 2023;
        int nowYear = LocalDate.now().getYear();

        List<InlineKeyboardRow> listRows = new ArrayList<>();
        for(int i = startYear; i <= nowYear; i++) {
            InlineKeyboardButton inlineKeyboardButton = new InlineKeyboardButton(String.valueOf(i));
            inlineKeyboardButton.setCallbackData(typeReport + i);
            InlineKeyboardRow inlineKeyboardButtons = new InlineKeyboardRow();
            inlineKeyboardButtons.add(inlineKeyboardButton);
            listRows.add(inlineKeyboardButtons);
        }

        InlineKeyboardMarkup inlineKeyboardMarkup = new InlineKeyboardMarkup(listRows);

        return SendMessage.builder()
                .chatId(chatId)
                .text("–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ–¥ –æ—Ç—á–µ—Ç–∞ \uD83D\uDC47")
                .replyMarkup(inlineKeyboardMarkup)
                .build();
    }

    public static SendMessage sendPhoneRequestKeyboard(Long chatId) {

        String messageText = """
        üìû –î–ª—è –Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üòâ
        
        –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑—É ‚¨áÔ∏è
        
        –ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π, —è –ø—Ä–æ—Å—Ç–æ —Ö–æ—á—É —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ —Ç—ã –Ω–∞—Å—Ç–æ—è—â–∏–π —á–µ–ª–æ–≤–µ–∫, –∞ –Ω–µ —Ç–∞–∫–æ–π –∫–∞–∫ —è ‚Äî –∂–µ–ª–µ–∑—è–∫–∞ —Å Wi-Fi üòÖ
        
        ‚ÄºÔ∏è–û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ. –ò–Ω–æ–≥–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Å–∏–º –∫–∞—Ä—Ç–∞.
        """;
        // –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫—É —Å –∑–∞–ø—Ä–æ—Å–æ–º –∫–æ–Ω—Ç–∞–∫—Ç–∞
        KeyboardButton requestContactButton = KeyboardButton.builder()
                .text("üì≤  –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
                .requestContact(true)
                .build();
        // –°–æ–∑–¥–∞—ë–º —Å—Ç—Ä–æ–∫—É —Å –∫–Ω–æ–ø–∫–æ–π
        KeyboardRow row = new KeyboardRow();
        row.add(requestContactButton);

        // –°–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        ReplyKeyboardMarkup keyboardMarkup = ReplyKeyboardMarkup.builder()
                .keyboard(List.of(row))
                .resizeKeyboard(true)
                .oneTimeKeyboard(true)
                .build();

        return SendMessage.builder()
                .chatId(chatId)
                .text(messageText)
                .replyMarkup(keyboardMarkup)
                .build();
    }



}
